{"ast":null,"code":"export const createTestAudioScheduledSourceNodeStopMethodNegativeParametersSupport = createNativeAudioNode => {\n  return nativeContext => {\n    const nativeAudioBufferSourceNode = createNativeAudioNode(nativeContext, ntvCntxt => ntvCntxt.createOscillator());\n\n    try {\n      nativeAudioBufferSourceNode.stop(-1);\n    } catch (err) {\n      return err instanceof RangeError;\n    }\n\n    return false;\n  };\n};","map":{"version":3,"sources":["../../../src/factories/test-audio-scheduled-source-node-stop-method-negative-parameters-support.ts"],"names":[],"mappings":"AAEA,OAAO,MAAM,qEAAqE,GAC9E,qBAD0J,IAE1J;AACA,SAAQ,aAAD,IAAkB;AACrB,UAAM,2BAA2B,GAAG,qBAAqB,CAAC,aAAD,EAAiB,QAAD,IAAc,QAAQ,CAAC,gBAAT,EAA9B,CAAzD;;AAEA,QAAI;AACA,MAAA,2BAA2B,CAAC,IAA5B,CAAiC,CAAC,CAAlC;AACH,KAFD,CAEE,OAAO,GAAP,EAAY;AACV,aAAO,GAAG,YAAY,UAAtB;AACH;;AAED,WAAO,KAAP;AACH,GAVD;AAWH,CAdM","sourceRoot":"","sourcesContent":["export const createTestAudioScheduledSourceNodeStopMethodNegativeParametersSupport = (createNativeAudioNode) => {\n    return (nativeContext) => {\n        const nativeAudioBufferSourceNode = createNativeAudioNode(nativeContext, (ntvCntxt) => ntvCntxt.createOscillator());\n        try {\n            nativeAudioBufferSourceNode.stop(-1);\n        }\n        catch (err) {\n            return err instanceof RangeError;\n        }\n        return false;\n    };\n};\n//# sourceMappingURL=test-audio-scheduled-source-node-stop-method-negative-parameters-support.js.map"]},"metadata":{},"sourceType":"module"}