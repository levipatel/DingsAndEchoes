{"ast":null,"code":"// based off https://medium.com/@pdx.lucasm/canvas-with-react-js-32e133c05258\nimport React,{useRef,useEffect}from'react';var Canvas=function Canvas(props){var canvasRef=useRef(null);// TODO: move out of component, should be passed as a prop\nvar draw=function draw(ctx){ctx.fillStyle='#000000';ctx.beginPath();ctx.arc(50,100,20,0,2*Math.PI);ctx.fill();};useEffect(function(){var canvas=canvasRef.current;var context=canvas.getContext('2d');//Our draw come here\ndraw(context);},[draw]);return/*#__PURE__*/React.createElement(\"canvas\",Object.assign({ref:canvasRef},props));};export default Canvas;","map":{"version":3,"sources":["/Users/levipatel/Github/DingsAndEchoes/src/Canvas.js"],"names":["React","useRef","useEffect","Canvas","props","canvasRef","draw","ctx","fillStyle","beginPath","arc","Math","PI","fill","canvas","current","context","getContext"],"mappings":"AAAA;AACA,MAAOA,CAAAA,KAAP,EAAgBC,MAAhB,CAAwBC,SAAxB,KAAyC,OAAzC,CAEA,GAAMC,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,CAAAC,KAAK,CAAI,CAEtB,GAAMC,CAAAA,SAAS,CAAGJ,MAAM,CAAC,IAAD,CAAxB,CAEA;AACA,GAAMK,CAAAA,IAAI,CAAG,QAAPA,CAAAA,IAAO,CAAAC,GAAG,CAAI,CAClBA,GAAG,CAACC,SAAJ,CAAgB,SAAhB,CACAD,GAAG,CAACE,SAAJ,GACAF,GAAG,CAACG,GAAJ,CAAQ,EAAR,CAAY,GAAZ,CAAiB,EAAjB,CAAqB,CAArB,CAAwB,EAAEC,IAAI,CAACC,EAA/B,EACAL,GAAG,CAACM,IAAJ,GACD,CALD,CAOAX,SAAS,CAAC,UAAM,CAEd,GAAMY,CAAAA,MAAM,CAAGT,SAAS,CAACU,OAAzB,CACA,GAAMC,CAAAA,OAAO,CAAGF,MAAM,CAACG,UAAP,CAAkB,IAAlB,CAAhB,CAEA;AACAX,IAAI,CAACU,OAAD,CAAJ,CACD,CAPQ,CAON,CAACV,IAAD,CAPM,CAAT,CASA,mBAAO,4CAAQ,GAAG,CAAED,SAAb,EAA4BD,KAA5B,EAAP,CACD,CAtBD,CAwBA,cAAeD,CAAAA,MAAf","sourcesContent":["// based off https://medium.com/@pdx.lucasm/canvas-with-react-js-32e133c05258\nimport React, { useRef, useEffect } from 'react'\n\nconst Canvas = props => {\n  \n  const canvasRef = useRef(null)\n  \n  // TODO: move out of component, should be passed as a prop\n  const draw = ctx => {\n    ctx.fillStyle = '#000000'\n    ctx.beginPath()\n    ctx.arc(50, 100, 20, 0, 2*Math.PI)\n    ctx.fill()\n  }\n  \n  useEffect(() => {\n    \n    const canvas = canvasRef.current\n    const context = canvas.getContext('2d')\n    \n    //Our draw come here\n    draw(context)\n  }, [draw])\n  \n  return <canvas ref={canvasRef} {...props}/>\n}\n\nexport default Canvas"]},"metadata":{},"sourceType":"module"}