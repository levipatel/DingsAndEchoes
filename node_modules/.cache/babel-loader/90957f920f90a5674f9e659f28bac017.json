{"ast":null,"code":"export var createWrapChannelMergerNode = function createWrapChannelMergerNode(createInvalidStateError, createNativeAudioNode, monitorConnectionsFunction) {\n  return function (nativeContext, channelMergerNode) {\n    channelMergerNode.channelCount = 1;\n    channelMergerNode.channelCountMode = 'explicit';\n    Object.defineProperty(channelMergerNode, 'channelCount', {\n      get: function get() {\n        return 1;\n      },\n      set: function set() {\n        throw createInvalidStateError();\n      }\n    });\n    Object.defineProperty(channelMergerNode, 'channelCountMode', {\n      get: function get() {\n        return 'explicit';\n      },\n      set: function set() {\n        throw createInvalidStateError();\n      }\n    }); // Bug #20: Safari requires a connection of any kind to treat the input signal correctly.\n\n    var audioBufferSourceNode = createNativeAudioNode(nativeContext, function (ntvCntxt) {\n      return ntvCntxt.createBufferSource();\n    });\n\n    var whenConnected = function whenConnected() {\n      var length = channelMergerNode.numberOfInputs;\n\n      for (var i = 0; i < length; i += 1) {\n        audioBufferSourceNode.connect(channelMergerNode, 0, i);\n      }\n    };\n\n    var whenDisconnected = function whenDisconnected() {\n      return audioBufferSourceNode.disconnect(channelMergerNode);\n    };\n\n    monitorConnectionsFunction(channelMergerNode, whenConnected, whenDisconnected);\n  };\n};","map":{"version":3,"sources":["../../../src/factories/wrap-channel-merger-node.ts"],"names":[],"mappings":"AAEA,OAAO,IAAM,2BAA2B,GAAkC,SAA7D,2BAA6D,CACtE,uBADsE,EAEtE,qBAFsE,EAGtE,0BAHsE,EAItE;AACA,SAAO,UAAC,aAAD,EAAgB,iBAAhB,EAAqC;AACxC,IAAA,iBAAiB,CAAC,YAAlB,GAAiC,CAAjC;AACA,IAAA,iBAAiB,CAAC,gBAAlB,GAAqC,UAArC;AAEA,IAAA,MAAM,CAAC,cAAP,CAAsB,iBAAtB,EAAyC,cAAzC,EAAyD;AACrD,MAAA,GAAG,EAAE;AAAA,eAAM,CAAN;AAAA,OADgD;AAErD,MAAA,GAAG,EAAE,eAAK;AACN,cAAM,uBAAuB,EAA7B;AACH;AAJoD,KAAzD;AAOA,IAAA,MAAM,CAAC,cAAP,CAAsB,iBAAtB,EAAyC,kBAAzC,EAA6D;AACzD,MAAA,GAAG,EAAE;AAAA,eAAM,UAAN;AAAA,OADoD;AAEzD,MAAA,GAAG,EAAE,eAAK;AACN,cAAM,uBAAuB,EAA7B;AACH;AAJwD,KAA7D,EAXwC,CAkBxC;;AACA,QAAM,qBAAqB,GAAG,qBAAqB,CAAC,aAAD,EAAgB,UAAC,QAAD;AAAA,aAAc,QAAQ,CAAC,kBAAT,EAAd;AAAA,KAAhB,CAAnD;;AAEA,QAAM,aAAa,GAAG,SAAhB,aAAgB,GAAK;AACvB,UAAM,MAAM,GAAG,iBAAiB,CAAC,cAAjC;;AAEA,WAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,MAApB,EAA4B,CAAC,IAAI,CAAjC,EAAoC;AAChC,QAAA,qBAAqB,CAAC,OAAtB,CAA8B,iBAA9B,EAAiD,CAAjD,EAAoD,CAApD;AACH;AACJ,KAND;;AAOA,QAAM,gBAAgB,GAAG,SAAnB,gBAAmB;AAAA,aAAM,qBAAqB,CAAC,UAAtB,CAAiC,iBAAjC,CAAN;AAAA,KAAzB;;AAEA,IAAA,0BAA0B,CAAC,iBAAD,EAAoB,aAApB,EAAmC,gBAAnC,CAA1B;AACH,GA/BD;AAgCH,CArCM","sourceRoot":"","sourcesContent":["export const createWrapChannelMergerNode = (createInvalidStateError, createNativeAudioNode, monitorConnectionsFunction) => {\n    return (nativeContext, channelMergerNode) => {\n        channelMergerNode.channelCount = 1;\n        channelMergerNode.channelCountMode = 'explicit';\n        Object.defineProperty(channelMergerNode, 'channelCount', {\n            get: () => 1,\n            set: () => {\n                throw createInvalidStateError();\n            }\n        });\n        Object.defineProperty(channelMergerNode, 'channelCountMode', {\n            get: () => 'explicit',\n            set: () => {\n                throw createInvalidStateError();\n            }\n        });\n        // Bug #20: Safari requires a connection of any kind to treat the input signal correctly.\n        const audioBufferSourceNode = createNativeAudioNode(nativeContext, (ntvCntxt) => ntvCntxt.createBufferSource());\n        const whenConnected = () => {\n            const length = channelMergerNode.numberOfInputs;\n            for (let i = 0; i < length; i += 1) {\n                audioBufferSourceNode.connect(channelMergerNode, 0, i);\n            }\n        };\n        const whenDisconnected = () => audioBufferSourceNode.disconnect(channelMergerNode);\n        monitorConnectionsFunction(channelMergerNode, whenConnected, whenDisconnected);\n    };\n};\n//# sourceMappingURL=wrap-channel-merger-node.js.map"]},"metadata":{},"sourceType":"module"}