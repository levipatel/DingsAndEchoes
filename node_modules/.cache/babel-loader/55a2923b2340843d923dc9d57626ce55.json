{"ast":null,"code":"export const createTestAudioBufferSourceNodeStartMethodConsecutiveCallsSupport = createNativeAudioNode => {\n  return nativeContext => {\n    const nativeAudioBufferSourceNode = createNativeAudioNode(nativeContext, ntvCntxt => ntvCntxt.createBufferSource());\n    nativeAudioBufferSourceNode.start();\n\n    try {\n      nativeAudioBufferSourceNode.start();\n    } catch {\n      return true;\n    }\n\n    return false;\n  };\n};","map":{"version":3,"sources":["../../../src/factories/test-audio-buffer-source-node-start-method-consecutive-calls-support.ts"],"names":[],"mappings":"AAEA,OAAO,MAAM,iEAAiE,GAC1E,qBADkJ,IAElJ;AACA,SAAQ,aAAD,IAAkB;AACrB,UAAM,2BAA2B,GAAG,qBAAqB,CAAC,aAAD,EAAiB,QAAD,IAAc,QAAQ,CAAC,kBAAT,EAA9B,CAAzD;AAEA,IAAA,2BAA2B,CAAC,KAA5B;;AAEA,QAAI;AACA,MAAA,2BAA2B,CAAC,KAA5B;AACH,KAFD,CAEE,MAAM;AACJ,aAAO,IAAP;AACH;;AAED,WAAO,KAAP;AACH,GAZD;AAaH,CAhBM","sourceRoot":"","sourcesContent":["export const createTestAudioBufferSourceNodeStartMethodConsecutiveCallsSupport = (createNativeAudioNode) => {\n    return (nativeContext) => {\n        const nativeAudioBufferSourceNode = createNativeAudioNode(nativeContext, (ntvCntxt) => ntvCntxt.createBufferSource());\n        nativeAudioBufferSourceNode.start();\n        try {\n            nativeAudioBufferSourceNode.start();\n        }\n        catch {\n            return true;\n        }\n        return false;\n    };\n};\n//# sourceMappingURL=test-audio-buffer-source-node-start-method-consecutive-calls-support.js.map"]},"metadata":{},"sourceType":"module"}