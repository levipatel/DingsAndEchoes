{"ast":null,"code":"import { assignNativeAudioNodeAudioParamValue } from '../helpers/assign-native-audio-node-audio-param-value';\nimport { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nexport const createNativeDynamicsCompressorNodeFactory = (createNativeAudioNode, createNotSupportedError) => {\n  return (nativeContext, options) => {\n    const nativeDynamicsCompressorNode = createNativeAudioNode(nativeContext, ntvCntxt => ntvCntxt.createDynamicsCompressor());\n    assignNativeAudioNodeOptions(nativeDynamicsCompressorNode, options); // Bug #108: Only Chrome, Firefox and Opera disallow a channelCount of three and above yet.\n\n    if (options.channelCount > 2) {\n      throw createNotSupportedError();\n    } // Bug #109: Only Chrome, Firefox and Opera disallow a channelCountMode of 'max'.\n\n\n    if (options.channelCountMode === 'max') {\n      throw createNotSupportedError();\n    }\n\n    assignNativeAudioNodeAudioParamValue(nativeDynamicsCompressorNode, options, 'attack');\n    assignNativeAudioNodeAudioParamValue(nativeDynamicsCompressorNode, options, 'knee');\n    assignNativeAudioNodeAudioParamValue(nativeDynamicsCompressorNode, options, 'ratio');\n    assignNativeAudioNodeAudioParamValue(nativeDynamicsCompressorNode, options, 'release');\n    assignNativeAudioNodeAudioParamValue(nativeDynamicsCompressorNode, options, 'threshold');\n    return nativeDynamicsCompressorNode;\n  };\n};","map":{"version":3,"sources":["../../../src/factories/native-dynamics-compressor-node-factory.ts"],"names":[],"mappings":"AAAA,SAAS,oCAAT,QAAqD,uDAArD;AACA,SAAS,4BAAT,QAA6C,6CAA7C;AAGA,OAAO,MAAM,yCAAyC,GAAgD,CAClG,qBADkG,EAElG,uBAFkG,KAGlG;AACA,SAAO,CAAC,aAAD,EAAgB,OAAhB,KAA2B;AAC9B,UAAM,4BAA4B,GAAG,qBAAqB,CAAC,aAAD,EAAiB,QAAD,IAAc,QAAQ,CAAC,wBAAT,EAA9B,CAA1D;AAEA,IAAA,4BAA4B,CAAC,4BAAD,EAA+B,OAA/B,CAA5B,CAH8B,CAK9B;;AACA,QAAI,OAAO,CAAC,YAAR,GAAuB,CAA3B,EAA8B;AAC1B,YAAM,uBAAuB,EAA7B;AACH,KAR6B,CAU9B;;;AACA,QAAI,OAAO,CAAC,gBAAR,KAA6B,KAAjC,EAAwC;AACpC,YAAM,uBAAuB,EAA7B;AACH;;AAED,IAAA,oCAAoC,CAAC,4BAAD,EAA+B,OAA/B,EAAwC,QAAxC,CAApC;AACA,IAAA,oCAAoC,CAAC,4BAAD,EAA+B,OAA/B,EAAwC,MAAxC,CAApC;AACA,IAAA,oCAAoC,CAAC,4BAAD,EAA+B,OAA/B,EAAwC,OAAxC,CAApC;AACA,IAAA,oCAAoC,CAAC,4BAAD,EAA+B,OAA/B,EAAwC,SAAxC,CAApC;AACA,IAAA,oCAAoC,CAAC,4BAAD,EAA+B,OAA/B,EAAwC,WAAxC,CAApC;AAEA,WAAO,4BAAP;AACH,GAtBD;AAuBH,CA3BM","sourceRoot":"","sourcesContent":["import { assignNativeAudioNodeAudioParamValue } from '../helpers/assign-native-audio-node-audio-param-value';\nimport { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nexport const createNativeDynamicsCompressorNodeFactory = (createNativeAudioNode, createNotSupportedError) => {\n    return (nativeContext, options) => {\n        const nativeDynamicsCompressorNode = createNativeAudioNode(nativeContext, (ntvCntxt) => ntvCntxt.createDynamicsCompressor());\n        assignNativeAudioNodeOptions(nativeDynamicsCompressorNode, options);\n        // Bug #108: Only Chrome, Firefox and Opera disallow a channelCount of three and above yet.\n        if (options.channelCount > 2) {\n            throw createNotSupportedError();\n        }\n        // Bug #109: Only Chrome, Firefox and Opera disallow a channelCountMode of 'max'.\n        if (options.channelCountMode === 'max') {\n            throw createNotSupportedError();\n        }\n        assignNativeAudioNodeAudioParamValue(nativeDynamicsCompressorNode, options, 'attack');\n        assignNativeAudioNodeAudioParamValue(nativeDynamicsCompressorNode, options, 'knee');\n        assignNativeAudioNodeAudioParamValue(nativeDynamicsCompressorNode, options, 'ratio');\n        assignNativeAudioNodeAudioParamValue(nativeDynamicsCompressorNode, options, 'release');\n        assignNativeAudioNodeAudioParamValue(nativeDynamicsCompressorNode, options, 'threshold');\n        return nativeDynamicsCompressorNode;\n    };\n};\n//# sourceMappingURL=native-dynamics-compressor-node-factory.js.map"]},"metadata":{},"sourceType":"module"}