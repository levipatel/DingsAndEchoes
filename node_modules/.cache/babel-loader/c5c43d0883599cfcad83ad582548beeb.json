{"ast":null,"code":"const DEFAULT_OPTIONS = {\n  channelCount: 2,\n\n  /*\n   * Bug #105: The channelCountMode should be 'clamped-max' according to the spec but is set to 'explicit' to achieve consistent\n   * behavior.\n   */\n  channelCountMode: 'explicit',\n  channelInterpretation: 'speakers',\n  pan: 0\n};\nexport const createStereoPannerNodeConstructor = (audioNodeConstructor, createAudioParam, createNativeStereoPannerNode, createStereoPannerNodeRenderer, getNativeContext, isNativeOfflineAudioContext) => {\n  return class StereoPannerNode extends audioNodeConstructor {\n    constructor(context, options = DEFAULT_OPTIONS) {\n      const nativeContext = getNativeContext(context);\n      const mergedOptions = { ...DEFAULT_OPTIONS,\n        ...options\n      };\n      const nativeStereoPannerNode = createNativeStereoPannerNode(nativeContext, mergedOptions);\n      const isOffline = isNativeOfflineAudioContext(nativeContext);\n      const stereoPannerNodeRenderer = isOffline ? createStereoPannerNodeRenderer() : null;\n      super(context, false, nativeStereoPannerNode, stereoPannerNodeRenderer); // Bug #106: Edge does not export a maxValue and minValue property.\n\n      this._pan = createAudioParam(this, isOffline, nativeStereoPannerNode.pan, 1, -1);\n    }\n\n    get pan() {\n      return this._pan;\n    }\n\n  };\n};","map":{"version":3,"sources":["../../../src/factories/stereo-panner-node-constructor.ts"],"names":[],"mappings":"AAGA,MAAM,eAAe,GAAG;AACpB,EAAA,YAAY,EAAE,CADM;;AAEpB;;;;AAIA,EAAA,gBAAgB,EAAE,UANE;AAOpB,EAAA,qBAAqB,EAAE,UAPH;AAQpB,EAAA,GAAG,EAAE;AARe,CAAxB;AAWA,OAAO,MAAM,iCAAiC,GAAwC,CAClF,oBADkF,EAElF,gBAFkF,EAGlF,4BAHkF,EAIlF,8BAJkF,EAKlF,gBALkF,EAMlF,2BANkF,KAOlF;AACA,SAAO,MAAM,gBAAN,SAAmD,oBAAnD,CAA0E;AAG7E,IAAA,WAAA,CAAY,OAAZ,EAAwB,OAAA,GAAyC,eAAjE,EAAgF;AAC5E,YAAM,aAAa,GAAG,gBAAgB,CAAC,OAAD,CAAtC;AACA,YAAM,aAAa,GAAG,EAAE,GAAG,eAAL;AAAsB,WAAG;AAAzB,OAAtB;AACA,YAAM,sBAAsB,GAAG,4BAA4B,CAAC,aAAD,EAAgB,aAAhB,CAA3D;AACA,YAAM,SAAS,GAAG,2BAA2B,CAAC,aAAD,CAA7C;AACA,YAAM,wBAAwB,GAAiC,SAAS,GAAG,8BAA8B,EAAjC,GAAsC,IAA9G;AAEA,YAAM,OAAN,EAAe,KAAf,EAAsB,sBAAtB,EAA8C,wBAA9C,EAP4E,CAS5E;;AACA,WAAK,IAAL,GAAY,gBAAgB,CAAC,IAAD,EAAO,SAAP,EAAkB,sBAAsB,CAAC,GAAzC,EAA8C,CAA9C,EAAiD,CAAC,CAAlD,CAA5B;AACH;;AAED,QAAI,GAAJ,GAAO;AACH,aAAO,KAAK,IAAZ;AACH;;AAlB4E,GAAjF;AAoBH,CA5BM","sourceRoot":"","sourcesContent":["const DEFAULT_OPTIONS = {\n    channelCount: 2,\n    /*\n     * Bug #105: The channelCountMode should be 'clamped-max' according to the spec but is set to 'explicit' to achieve consistent\n     * behavior.\n     */\n    channelCountMode: 'explicit',\n    channelInterpretation: 'speakers',\n    pan: 0\n};\nexport const createStereoPannerNodeConstructor = (audioNodeConstructor, createAudioParam, createNativeStereoPannerNode, createStereoPannerNodeRenderer, getNativeContext, isNativeOfflineAudioContext) => {\n    return class StereoPannerNode extends audioNodeConstructor {\n        constructor(context, options = DEFAULT_OPTIONS) {\n            const nativeContext = getNativeContext(context);\n            const mergedOptions = { ...DEFAULT_OPTIONS, ...options };\n            const nativeStereoPannerNode = createNativeStereoPannerNode(nativeContext, mergedOptions);\n            const isOffline = isNativeOfflineAudioContext(nativeContext);\n            const stereoPannerNodeRenderer = (isOffline ? createStereoPannerNodeRenderer() : null);\n            super(context, false, nativeStereoPannerNode, stereoPannerNodeRenderer);\n            // Bug #106: Edge does not export a maxValue and minValue property.\n            this._pan = createAudioParam(this, isOffline, nativeStereoPannerNode.pan, 1, -1);\n        }\n        get pan() {\n            return this._pan;\n        }\n    };\n};\n//# sourceMappingURL=stereo-panner-node-constructor.js.map"]},"metadata":{},"sourceType":"module"}