{"ast":null,"code":"import _objectSpread from \"/Users/levipatel/Github/DingsAndEchoes/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _classCallCheck from \"/Users/levipatel/Github/DingsAndEchoes/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/levipatel/Github/DingsAndEchoes/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/Users/levipatel/Github/DingsAndEchoes/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/Users/levipatel/Github/DingsAndEchoes/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/levipatel/Github/DingsAndEchoes/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar DEFAULT_OPTIONS = {\n  channelCount: 2,\n  channelCountMode: 'max',\n  channelInterpretation: 'speakers',\n  delayTime: 0,\n  maxDelayTime: 1\n};\nexport var createDelayNodeConstructor = function createDelayNodeConstructor(audioNodeConstructor, createAudioParam, createDelayNodeRenderer, createNativeDelayNode, getNativeContext, isNativeOfflineAudioContext) {\n  return /*#__PURE__*/function (_audioNodeConstructor) {\n    _inherits(DelayNode, _audioNodeConstructor);\n\n    var _super = _createSuper(DelayNode);\n\n    function DelayNode(context) {\n      var _this;\n\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : DEFAULT_OPTIONS;\n\n      _classCallCheck(this, DelayNode);\n\n      var nativeContext = getNativeContext(context);\n\n      var mergedOptions = _objectSpread(_objectSpread({}, DEFAULT_OPTIONS), options);\n\n      var nativeDelayNode = createNativeDelayNode(nativeContext, mergedOptions);\n      var isOffline = isNativeOfflineAudioContext(nativeContext);\n      var delayNodeRenderer = isOffline ? createDelayNodeRenderer(mergedOptions.maxDelayTime) : null;\n      _this = _super.call(this, context, false, nativeDelayNode, delayNodeRenderer); // Bug #161: Edge does not export the correct values for maxValue and minValue.\n\n      _this._delayTime = createAudioParam(_assertThisInitialized(_this), isOffline, nativeDelayNode.delayTime, mergedOptions.maxDelayTime, 0);\n      return _this;\n    }\n\n    _createClass(DelayNode, [{\n      key: \"delayTime\",\n      get: function get() {\n        return this._delayTime;\n      }\n    }]);\n\n    return DelayNode;\n  }(audioNodeConstructor);\n};","map":{"version":3,"sources":["../../../src/factories/delay-node-constructor.ts"],"names":[],"mappings":";;;;;;AAGA,IAAM,eAAe,GAAG;AACpB,EAAA,YAAY,EAAE,CADM;AAEpB,EAAA,gBAAgB,EAAE,KAFE;AAGpB,EAAA,qBAAqB,EAAE,UAHH;AAIpB,EAAA,SAAS,EAAE,CAJS;AAKpB,EAAA,YAAY,EAAE;AALM,CAAxB;AAQA,OAAO,IAAM,0BAA0B,GAAiC,SAA3D,0BAA2D,CACpE,oBADoE,EAEpE,gBAFoE,EAGpE,uBAHoE,EAIpE,qBAJoE,EAKpE,gBALoE,EAMpE,2BANoE,EAOpE;AACA;AAAA;;AAAA;;AAGI,uBAAY,OAAZ,EAAyE;AAAA;;AAAA,UAAjD,OAAiD,uEAAf,eAAe;;AAAA;;AACrE,UAAM,aAAa,GAAG,gBAAgB,CAAC,OAAD,CAAtC;;AACA,UAAM,aAAa,mCAAQ,eAAR,GAA4B,OAA5B,CAAnB;;AACA,UAAM,eAAe,GAAG,qBAAqB,CAAC,aAAD,EAAgB,aAAhB,CAA7C;AACA,UAAM,SAAS,GAAG,2BAA2B,CAAC,aAAD,CAA7C;AACA,UAAM,iBAAiB,GAAiC,SAAS,GAAG,uBAAuB,CAAC,aAAa,CAAC,YAAf,CAA1B,GAAyD,IAA1H;AAEA,gCAAM,OAAN,EAAe,KAAf,EAAsB,eAAtB,EAAuC,iBAAvC,EAPqE,CASrE;;AACA,YAAK,UAAL,GAAkB,gBAAgB,gCAAO,SAAP,EAAkB,eAAe,CAAC,SAAlC,EAA6C,aAAa,CAAC,YAA3D,EAAyE,CAAzE,CAAlC;AAVqE;AAWxE;;AAdL;AAAA;AAAA,0BAgBiB;AACT,eAAO,KAAK,UAAZ;AACH;AAlBL;;AAAA;AAAA,IAAmD,oBAAnD;AAoBH,CA5BM","sourceRoot":"","sourcesContent":["const DEFAULT_OPTIONS = {\n    channelCount: 2,\n    channelCountMode: 'max',\n    channelInterpretation: 'speakers',\n    delayTime: 0,\n    maxDelayTime: 1\n};\nexport const createDelayNodeConstructor = (audioNodeConstructor, createAudioParam, createDelayNodeRenderer, createNativeDelayNode, getNativeContext, isNativeOfflineAudioContext) => {\n    return class DelayNode extends audioNodeConstructor {\n        constructor(context, options = DEFAULT_OPTIONS) {\n            const nativeContext = getNativeContext(context);\n            const mergedOptions = { ...DEFAULT_OPTIONS, ...options };\n            const nativeDelayNode = createNativeDelayNode(nativeContext, mergedOptions);\n            const isOffline = isNativeOfflineAudioContext(nativeContext);\n            const delayNodeRenderer = (isOffline ? createDelayNodeRenderer(mergedOptions.maxDelayTime) : null);\n            super(context, false, nativeDelayNode, delayNodeRenderer);\n            // Bug #161: Edge does not export the correct values for maxValue and minValue.\n            this._delayTime = createAudioParam(this, isOffline, nativeDelayNode.delayTime, mergedOptions.maxDelayTime, 0);\n        }\n        get delayTime() {\n            return this._delayTime;\n        }\n    };\n};\n//# sourceMappingURL=delay-node-constructor.js.map"]},"metadata":{},"sourceType":"module"}