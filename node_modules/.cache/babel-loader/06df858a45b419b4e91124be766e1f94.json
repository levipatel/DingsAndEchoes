{"ast":null,"code":"import _objectSpread from \"/Users/levipatel/Github/DingsAndEchoes/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _classCallCheck from \"/Users/levipatel/Github/DingsAndEchoes/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/levipatel/Github/DingsAndEchoes/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/Users/levipatel/Github/DingsAndEchoes/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/Users/levipatel/Github/DingsAndEchoes/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/levipatel/Github/DingsAndEchoes/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport { MOST_NEGATIVE_SINGLE_FLOAT, MOST_POSITIVE_SINGLE_FLOAT } from '../constants';\nvar DEFAULT_OPTIONS = {\n  channelCount: 2,\n  channelCountMode: 'clamped-max',\n  channelInterpretation: 'speakers',\n  coneInnerAngle: 360,\n  coneOuterAngle: 360,\n  coneOuterGain: 0,\n  distanceModel: 'inverse',\n  maxDistance: 10000,\n  orientationX: 1,\n  orientationY: 0,\n  orientationZ: 0,\n  panningModel: 'equalpower',\n  positionX: 0,\n  positionY: 0,\n  positionZ: 0,\n  refDistance: 1,\n  rolloffFactor: 1\n};\nexport var createPannerNodeConstructor = function createPannerNodeConstructor(audioNodeConstructor, createAudioParam, createNativePannerNode, createPannerNodeRenderer, getNativeContext, isNativeOfflineAudioContext) {\n  return /*#__PURE__*/function (_audioNodeConstructor) {\n    _inherits(PannerNode, _audioNodeConstructor);\n\n    var _super = _createSuper(PannerNode);\n\n    function PannerNode(context) {\n      var _this;\n\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : DEFAULT_OPTIONS;\n\n      _classCallCheck(this, PannerNode);\n\n      var nativeContext = getNativeContext(context);\n\n      var mergedOptions = _objectSpread(_objectSpread({}, DEFAULT_OPTIONS), options);\n\n      var nativePannerNode = createNativePannerNode(nativeContext, mergedOptions);\n      var isOffline = isNativeOfflineAudioContext(nativeContext);\n      var pannerNodeRenderer = isOffline ? createPannerNodeRenderer() : null;\n      _this = _super.call(this, context, false, nativePannerNode, pannerNodeRenderer);\n      _this._nativePannerNode = nativePannerNode; // Bug #74: Edge & Safari do not export the correct values for maxValue and minValue for GainNodes.\n\n      _this._orientationX = createAudioParam(_assertThisInitialized(_this), isOffline, nativePannerNode.orientationX, MOST_POSITIVE_SINGLE_FLOAT, MOST_NEGATIVE_SINGLE_FLOAT);\n      _this._orientationY = createAudioParam(_assertThisInitialized(_this), isOffline, nativePannerNode.orientationY, MOST_POSITIVE_SINGLE_FLOAT, MOST_NEGATIVE_SINGLE_FLOAT);\n      _this._orientationZ = createAudioParam(_assertThisInitialized(_this), isOffline, nativePannerNode.orientationZ, MOST_POSITIVE_SINGLE_FLOAT, MOST_NEGATIVE_SINGLE_FLOAT);\n      _this._positionX = createAudioParam(_assertThisInitialized(_this), isOffline, nativePannerNode.positionX, MOST_POSITIVE_SINGLE_FLOAT, MOST_NEGATIVE_SINGLE_FLOAT);\n      _this._positionY = createAudioParam(_assertThisInitialized(_this), isOffline, nativePannerNode.positionY, MOST_POSITIVE_SINGLE_FLOAT, MOST_NEGATIVE_SINGLE_FLOAT);\n      _this._positionZ = createAudioParam(_assertThisInitialized(_this), isOffline, nativePannerNode.positionZ, MOST_POSITIVE_SINGLE_FLOAT, MOST_NEGATIVE_SINGLE_FLOAT);\n      return _this;\n    }\n\n    _createClass(PannerNode, [{\n      key: \"coneInnerAngle\",\n      get: function get() {\n        return this._nativePannerNode.coneInnerAngle;\n      },\n      set: function set(value) {\n        this._nativePannerNode.coneInnerAngle = value;\n      }\n    }, {\n      key: \"coneOuterAngle\",\n      get: function get() {\n        return this._nativePannerNode.coneOuterAngle;\n      },\n      set: function set(value) {\n        this._nativePannerNode.coneOuterAngle = value;\n      }\n    }, {\n      key: \"coneOuterGain\",\n      get: function get() {\n        return this._nativePannerNode.coneOuterGain;\n      },\n      set: function set(value) {\n        this._nativePannerNode.coneOuterGain = value;\n      }\n    }, {\n      key: \"distanceModel\",\n      get: function get() {\n        return this._nativePannerNode.distanceModel;\n      },\n      set: function set(value) {\n        this._nativePannerNode.distanceModel = value;\n      }\n    }, {\n      key: \"maxDistance\",\n      get: function get() {\n        return this._nativePannerNode.maxDistance;\n      },\n      set: function set(value) {\n        this._nativePannerNode.maxDistance = value;\n      }\n    }, {\n      key: \"orientationX\",\n      get: function get() {\n        return this._orientationX;\n      }\n    }, {\n      key: \"orientationY\",\n      get: function get() {\n        return this._orientationY;\n      }\n    }, {\n      key: \"orientationZ\",\n      get: function get() {\n        return this._orientationZ;\n      }\n    }, {\n      key: \"panningModel\",\n      get: function get() {\n        return this._nativePannerNode.panningModel;\n      },\n      set: function set(value) {\n        this._nativePannerNode.panningModel = value;\n      }\n    }, {\n      key: \"positionX\",\n      get: function get() {\n        return this._positionX;\n      }\n    }, {\n      key: \"positionY\",\n      get: function get() {\n        return this._positionY;\n      }\n    }, {\n      key: \"positionZ\",\n      get: function get() {\n        return this._positionZ;\n      }\n    }, {\n      key: \"refDistance\",\n      get: function get() {\n        return this._nativePannerNode.refDistance;\n      },\n      set: function set(value) {\n        this._nativePannerNode.refDistance = value;\n      }\n    }, {\n      key: \"rolloffFactor\",\n      get: function get() {\n        return this._nativePannerNode.rolloffFactor;\n      },\n      set: function set(value) {\n        this._nativePannerNode.rolloffFactor = value;\n      }\n    }]);\n\n    return PannerNode;\n  }(audioNodeConstructor);\n};","map":{"version":3,"sources":["../../../src/factories/panner-node-constructor.ts"],"names":[],"mappings":";;;;;;AAAA,SAAS,0BAAT,EAAqC,0BAArC,QAAuE,cAAvE;AAWA,IAAM,eAAe,GAAG;AACpB,EAAA,YAAY,EAAE,CADM;AAEpB,EAAA,gBAAgB,EAAE,aAFE;AAGpB,EAAA,qBAAqB,EAAE,UAHH;AAIpB,EAAA,cAAc,EAAE,GAJI;AAKpB,EAAA,cAAc,EAAE,GALI;AAMpB,EAAA,aAAa,EAAE,CANK;AAOpB,EAAA,aAAa,EAAE,SAPK;AAQpB,EAAA,WAAW,EAAE,KARO;AASpB,EAAA,YAAY,EAAE,CATM;AAUpB,EAAA,YAAY,EAAE,CAVM;AAWpB,EAAA,YAAY,EAAE,CAXM;AAYpB,EAAA,YAAY,EAAE,YAZM;AAapB,EAAA,SAAS,EAAE,CAbS;AAcpB,EAAA,SAAS,EAAE,CAdS;AAepB,EAAA,SAAS,EAAE,CAfS;AAgBpB,EAAA,WAAW,EAAE,CAhBO;AAiBpB,EAAA,aAAa,EAAE;AAjBK,CAAxB;AAoBA,OAAO,IAAM,2BAA2B,GAAkC,SAA7D,2BAA6D,CACtE,oBADsE,EAEtE,gBAFsE,EAGtE,sBAHsE,EAItE,wBAJsE,EAKtE,gBALsE,EAMtE,2BANsE,EAOtE;AACA;AAAA;;AAAA;;AAeI,wBAAY,OAAZ,EAA0E;AAAA;;AAAA,UAAlD,OAAkD,uEAAf,eAAe;;AAAA;;AACtE,UAAM,aAAa,GAAG,gBAAgB,CAAC,OAAD,CAAtC;;AACA,UAAM,aAAa,mCAAQ,eAAR,GAA4B,OAA5B,CAAnB;;AACA,UAAM,gBAAgB,GAAG,sBAAsB,CAAC,aAAD,EAAgB,aAAhB,CAA/C;AACA,UAAM,SAAS,GAAG,2BAA2B,CAAC,aAAD,CAA7C;AACA,UAAM,kBAAkB,GAAiC,SAAS,GAAG,wBAAwB,EAA3B,GAAgC,IAAlG;AAEA,gCAAM,OAAN,EAAe,KAAf,EAAsB,gBAAtB,EAAwC,kBAAxC;AAEA,YAAK,iBAAL,GAAyB,gBAAzB,CATsE,CAUtE;;AACA,YAAK,aAAL,GAAqB,gBAAgB,gCAEjC,SAFiC,EAGjC,gBAAgB,CAAC,YAHgB,EAIjC,0BAJiC,EAKjC,0BALiC,CAArC;AAOA,YAAK,aAAL,GAAqB,gBAAgB,gCAEjC,SAFiC,EAGjC,gBAAgB,CAAC,YAHgB,EAIjC,0BAJiC,EAKjC,0BALiC,CAArC;AAOA,YAAK,aAAL,GAAqB,gBAAgB,gCAEjC,SAFiC,EAGjC,gBAAgB,CAAC,YAHgB,EAIjC,0BAJiC,EAKjC,0BALiC,CAArC;AAOA,YAAK,UAAL,GAAkB,gBAAgB,gCAE9B,SAF8B,EAG9B,gBAAgB,CAAC,SAHa,EAI9B,0BAJ8B,EAK9B,0BAL8B,CAAlC;AAOA,YAAK,UAAL,GAAkB,gBAAgB,gCAE9B,SAF8B,EAG9B,gBAAgB,CAAC,SAHa,EAI9B,0BAJ8B,EAK9B,0BAL8B,CAAlC;AAOA,YAAK,UAAL,GAAkB,gBAAgB,gCAE9B,SAF8B,EAG9B,gBAAgB,CAAC,SAHa,EAI9B,0BAJ8B,EAK9B,0BAL8B,CAAlC;AA9CsE;AAqDzE;;AApEL;AAAA;AAAA,0BAsEsB;AACd,eAAO,KAAK,iBAAL,CAAuB,cAA9B;AACH,OAxEL;AAAA,wBA0EuB,KA1EvB,EA0E4B;AACpB,aAAK,iBAAL,CAAuB,cAAvB,GAAwC,KAAxC;AACH;AA5EL;AAAA;AAAA,0BA8EsB;AACd,eAAO,KAAK,iBAAL,CAAuB,cAA9B;AACH,OAhFL;AAAA,wBAkFuB,KAlFvB,EAkF4B;AACpB,aAAK,iBAAL,CAAuB,cAAvB,GAAwC,KAAxC;AACH;AApFL;AAAA;AAAA,0BAsFqB;AACb,eAAO,KAAK,iBAAL,CAAuB,aAA9B;AACH,OAxFL;AAAA,wBA0FsB,KA1FtB,EA0F2B;AACnB,aAAK,iBAAL,CAAuB,aAAvB,GAAuC,KAAvC;AACH;AA5FL;AAAA;AAAA,0BA8FqB;AACb,eAAO,KAAK,iBAAL,CAAuB,aAA9B;AACH,OAhGL;AAAA,wBAkGsB,KAlGtB,EAkG2B;AACnB,aAAK,iBAAL,CAAuB,aAAvB,GAAuC,KAAvC;AACH;AApGL;AAAA;AAAA,0BAsGmB;AACX,eAAO,KAAK,iBAAL,CAAuB,WAA9B;AACH,OAxGL;AAAA,wBA0GoB,KA1GpB,EA0GyB;AACjB,aAAK,iBAAL,CAAuB,WAAvB,GAAqC,KAArC;AACH;AA5GL;AAAA;AAAA,0BA8GoB;AACZ,eAAO,KAAK,aAAZ;AACH;AAhHL;AAAA;AAAA,0BAkHoB;AACZ,eAAO,KAAK,aAAZ;AACH;AApHL;AAAA;AAAA,0BAsHoB;AACZ,eAAO,KAAK,aAAZ;AACH;AAxHL;AAAA;AAAA,0BA0HoB;AACZ,eAAO,KAAK,iBAAL,CAAuB,YAA9B;AACH,OA5HL;AAAA,wBA8HqB,KA9HrB,EA8H0B;AAClB,aAAK,iBAAL,CAAuB,YAAvB,GAAsC,KAAtC;AACH;AAhIL;AAAA;AAAA,0BAkIiB;AACT,eAAO,KAAK,UAAZ;AACH;AApIL;AAAA;AAAA,0BAsIiB;AACT,eAAO,KAAK,UAAZ;AACH;AAxIL;AAAA;AAAA,0BA0IiB;AACT,eAAO,KAAK,UAAZ;AACH;AA5IL;AAAA;AAAA,0BA8ImB;AACX,eAAO,KAAK,iBAAL,CAAuB,WAA9B;AACH,OAhJL;AAAA,wBAkJoB,KAlJpB,EAkJyB;AACjB,aAAK,iBAAL,CAAuB,WAAvB,GAAqC,KAArC;AACH;AApJL;AAAA;AAAA,0BAsJqB;AACb,eAAO,KAAK,iBAAL,CAAuB,aAA9B;AACH,OAxJL;AAAA,wBA0JsB,KA1JtB,EA0J2B;AACnB,aAAK,iBAAL,CAAuB,aAAvB,GAAuC,KAAvC;AACH;AA5JL;;AAAA;AAAA,IAAoD,oBAApD;AA8JH,CAtKM","sourceRoot":"","sourcesContent":["import { MOST_NEGATIVE_SINGLE_FLOAT, MOST_POSITIVE_SINGLE_FLOAT } from '../constants';\nconst DEFAULT_OPTIONS = {\n    channelCount: 2,\n    channelCountMode: 'clamped-max',\n    channelInterpretation: 'speakers',\n    coneInnerAngle: 360,\n    coneOuterAngle: 360,\n    coneOuterGain: 0,\n    distanceModel: 'inverse',\n    maxDistance: 10000,\n    orientationX: 1,\n    orientationY: 0,\n    orientationZ: 0,\n    panningModel: 'equalpower',\n    positionX: 0,\n    positionY: 0,\n    positionZ: 0,\n    refDistance: 1,\n    rolloffFactor: 1\n};\nexport const createPannerNodeConstructor = (audioNodeConstructor, createAudioParam, createNativePannerNode, createPannerNodeRenderer, getNativeContext, isNativeOfflineAudioContext) => {\n    return class PannerNode extends audioNodeConstructor {\n        constructor(context, options = DEFAULT_OPTIONS) {\n            const nativeContext = getNativeContext(context);\n            const mergedOptions = { ...DEFAULT_OPTIONS, ...options };\n            const nativePannerNode = createNativePannerNode(nativeContext, mergedOptions);\n            const isOffline = isNativeOfflineAudioContext(nativeContext);\n            const pannerNodeRenderer = (isOffline ? createPannerNodeRenderer() : null);\n            super(context, false, nativePannerNode, pannerNodeRenderer);\n            this._nativePannerNode = nativePannerNode;\n            // Bug #74: Edge & Safari do not export the correct values for maxValue and minValue for GainNodes.\n            this._orientationX = createAudioParam(this, isOffline, nativePannerNode.orientationX, MOST_POSITIVE_SINGLE_FLOAT, MOST_NEGATIVE_SINGLE_FLOAT);\n            this._orientationY = createAudioParam(this, isOffline, nativePannerNode.orientationY, MOST_POSITIVE_SINGLE_FLOAT, MOST_NEGATIVE_SINGLE_FLOAT);\n            this._orientationZ = createAudioParam(this, isOffline, nativePannerNode.orientationZ, MOST_POSITIVE_SINGLE_FLOAT, MOST_NEGATIVE_SINGLE_FLOAT);\n            this._positionX = createAudioParam(this, isOffline, nativePannerNode.positionX, MOST_POSITIVE_SINGLE_FLOAT, MOST_NEGATIVE_SINGLE_FLOAT);\n            this._positionY = createAudioParam(this, isOffline, nativePannerNode.positionY, MOST_POSITIVE_SINGLE_FLOAT, MOST_NEGATIVE_SINGLE_FLOAT);\n            this._positionZ = createAudioParam(this, isOffline, nativePannerNode.positionZ, MOST_POSITIVE_SINGLE_FLOAT, MOST_NEGATIVE_SINGLE_FLOAT);\n        }\n        get coneInnerAngle() {\n            return this._nativePannerNode.coneInnerAngle;\n        }\n        set coneInnerAngle(value) {\n            this._nativePannerNode.coneInnerAngle = value;\n        }\n        get coneOuterAngle() {\n            return this._nativePannerNode.coneOuterAngle;\n        }\n        set coneOuterAngle(value) {\n            this._nativePannerNode.coneOuterAngle = value;\n        }\n        get coneOuterGain() {\n            return this._nativePannerNode.coneOuterGain;\n        }\n        set coneOuterGain(value) {\n            this._nativePannerNode.coneOuterGain = value;\n        }\n        get distanceModel() {\n            return this._nativePannerNode.distanceModel;\n        }\n        set distanceModel(value) {\n            this._nativePannerNode.distanceModel = value;\n        }\n        get maxDistance() {\n            return this._nativePannerNode.maxDistance;\n        }\n        set maxDistance(value) {\n            this._nativePannerNode.maxDistance = value;\n        }\n        get orientationX() {\n            return this._orientationX;\n        }\n        get orientationY() {\n            return this._orientationY;\n        }\n        get orientationZ() {\n            return this._orientationZ;\n        }\n        get panningModel() {\n            return this._nativePannerNode.panningModel;\n        }\n        set panningModel(value) {\n            this._nativePannerNode.panningModel = value;\n        }\n        get positionX() {\n            return this._positionX;\n        }\n        get positionY() {\n            return this._positionY;\n        }\n        get positionZ() {\n            return this._positionZ;\n        }\n        get refDistance() {\n            return this._nativePannerNode.refDistance;\n        }\n        set refDistance(value) {\n            this._nativePannerNode.refDistance = value;\n        }\n        get rolloffFactor() {\n            return this._nativePannerNode.rolloffFactor;\n        }\n        set rolloffFactor(value) {\n            this._nativePannerNode.rolloffFactor = value;\n        }\n    };\n};\n//# sourceMappingURL=panner-node-constructor.js.map"]},"metadata":{},"sourceType":"module"}