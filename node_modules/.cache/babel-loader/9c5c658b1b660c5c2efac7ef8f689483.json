{"ast":null,"code":"// Bug #92: Edge does not respect the duration parameter yet.\nexport const createTestAudioBufferSourceNodeStartMethodDurationParameterSupport = nativeOfflineAudioContextConstructor => {\n  return () => {\n    if (nativeOfflineAudioContextConstructor === null) {\n      return Promise.resolve(false);\n    }\n\n    const offlineAudioContext = new nativeOfflineAudioContextConstructor(1, 1, 44100);\n    const audioBuffer = offlineAudioContext.createBuffer(1, 1, offlineAudioContext.sampleRate);\n    const audioBufferSourceNode = offlineAudioContext.createBufferSource();\n    audioBuffer.getChannelData(0)[0] = 1;\n    audioBufferSourceNode.buffer = audioBuffer;\n    audioBufferSourceNode.start(0, 0, 0);\n    audioBufferSourceNode.connect(offlineAudioContext.destination); // Bug #21: Safari does not support promises yet.\n\n    return new Promise(resolve => {\n      offlineAudioContext.oncomplete = ({\n        renderedBuffer\n      }) => {\n        // Bug #5: Safari does not support copyFromChannel().\n        resolve(renderedBuffer.getChannelData(0)[0] === 0);\n      };\n\n      offlineAudioContext.startRendering();\n    });\n  };\n};","map":{"version":3,"sources":["../../../src/factories/test-audio-buffer-source-node-start-method-duration-parameter-support.ts"],"names":[],"mappings":"AAEA;AACA,OAAO,MAAM,kEAAkE,GAC3E,oCADoJ,IAEpJ;AACA,SAAO,MAAK;AACR,QAAI,oCAAoC,KAAK,IAA7C,EAAmD;AAC/C,aAAO,OAAO,CAAC,OAAR,CAAgB,KAAhB,CAAP;AACH;;AAED,UAAM,mBAAmB,GAAG,IAAI,oCAAJ,CAAyC,CAAzC,EAA4C,CAA5C,EAA+C,KAA/C,CAA5B;AACA,UAAM,WAAW,GAAG,mBAAmB,CAAC,YAApB,CAAiC,CAAjC,EAAoC,CAApC,EAAuC,mBAAmB,CAAC,UAA3D,CAApB;AACA,UAAM,qBAAqB,GAAG,mBAAmB,CAAC,kBAApB,EAA9B;AAEA,IAAA,WAAW,CAAC,cAAZ,CAA2B,CAA3B,EAA8B,CAA9B,IAAmC,CAAnC;AAEA,IAAA,qBAAqB,CAAC,MAAtB,GAA+B,WAA/B;AACA,IAAA,qBAAqB,CAAC,KAAtB,CAA4B,CAA5B,EAA+B,CAA/B,EAAkC,CAAlC;AACA,IAAA,qBAAqB,CAAC,OAAtB,CAA8B,mBAAmB,CAAC,WAAlD,EAbQ,CAeR;;AACA,WAAO,IAAI,OAAJ,CAAa,OAAD,IAAY;AAC3B,MAAA,mBAAmB,CAAC,UAApB,GAAiC,CAAC;AAAE,QAAA;AAAF,OAAD,KAAuB;AACpD;AACA,QAAA,OAAO,CAAC,cAAc,CAAC,cAAf,CAA8B,CAA9B,EAAiC,CAAjC,MAAwC,CAAzC,CAAP;AACH,OAHD;;AAKA,MAAA,mBAAmB,CAAC,cAApB;AACH,KAPM,CAAP;AAQH,GAxBD;AAyBH,CA5BM","sourceRoot":"","sourcesContent":["// Bug #92: Edge does not respect the duration parameter yet.\nexport const createTestAudioBufferSourceNodeStartMethodDurationParameterSupport = (nativeOfflineAudioContextConstructor) => {\n    return () => {\n        if (nativeOfflineAudioContextConstructor === null) {\n            return Promise.resolve(false);\n        }\n        const offlineAudioContext = new nativeOfflineAudioContextConstructor(1, 1, 44100);\n        const audioBuffer = offlineAudioContext.createBuffer(1, 1, offlineAudioContext.sampleRate);\n        const audioBufferSourceNode = offlineAudioContext.createBufferSource();\n        audioBuffer.getChannelData(0)[0] = 1;\n        audioBufferSourceNode.buffer = audioBuffer;\n        audioBufferSourceNode.start(0, 0, 0);\n        audioBufferSourceNode.connect(offlineAudioContext.destination);\n        // Bug #21: Safari does not support promises yet.\n        return new Promise((resolve) => {\n            offlineAudioContext.oncomplete = ({ renderedBuffer }) => {\n                // Bug #5: Safari does not support copyFromChannel().\n                resolve(renderedBuffer.getChannelData(0)[0] === 0);\n            };\n            offlineAudioContext.startRendering();\n        });\n    };\n};\n//# sourceMappingURL=test-audio-buffer-source-node-start-method-duration-parameter-support.js.map"]},"metadata":{},"sourceType":"module"}