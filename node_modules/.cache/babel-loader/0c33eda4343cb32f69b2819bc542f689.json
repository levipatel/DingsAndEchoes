{"ast":null,"code":"export const createNativePeriodicWaveFactory = getBackupNativeContext => {\n  return (nativeContext, {\n    disableNormalization,\n    imag,\n    real\n  }) => {\n    // Bug #50: Only Edge does currently not allow to create AudioNodes (and other objects) on a closed context yet.\n    const backupNativeContext = getBackupNativeContext(nativeContext); // @todo Edge, Firefox & Safari do only accept Float32Arrays.\n\n    const wrappedImag = new Float32Array(imag);\n    const wrappedReal = new Float32Array(real);\n\n    if (backupNativeContext !== null) {\n      return backupNativeContext.createPeriodicWave(wrappedReal, wrappedImag, {\n        disableNormalization\n      });\n    }\n\n    return nativeContext.createPeriodicWave(wrappedReal, wrappedImag, {\n      disableNormalization\n    });\n  };\n};","map":{"version":3,"sources":["../../../src/factories/native-periodic-wave-factory.ts"],"names":[],"mappings":"AAEA,OAAO,MAAM,+BAA+B,GAAuC,sBAAD,IAA2B;AACzG,SAAO,CAAC,aAAD,EAAgB;AAAE,IAAA,oBAAF;AAAwB,IAAA,IAAxB;AAA8B,IAAA;AAA9B,GAAhB,KAAwD;AAC3D;AACA,UAAM,mBAAmB,GAAG,sBAAsB,CAAC,aAAD,CAAlD,CAF2D,CAI3D;;AACA,UAAM,WAAW,GAAG,IAAI,YAAJ,CAAiB,IAAjB,CAApB;AACA,UAAM,WAAW,GAAG,IAAI,YAAJ,CAAiB,IAAjB,CAApB;;AAEA,QAAI,mBAAmB,KAAK,IAA5B,EAAkC;AAC9B,aAAO,mBAAmB,CAAC,kBAApB,CAAuC,WAAvC,EAAoD,WAApD,EAAiE;AAAE,QAAA;AAAF,OAAjE,CAAP;AACH;;AAED,WAAO,aAAa,CAAC,kBAAd,CAAiC,WAAjC,EAA8C,WAA9C,EAA2D;AAAE,MAAA;AAAF,KAA3D,CAAP;AACH,GAbD;AAcH,CAfM","sourceRoot":"","sourcesContent":["export const createNativePeriodicWaveFactory = (getBackupNativeContext) => {\n    return (nativeContext, { disableNormalization, imag, real }) => {\n        // Bug #50: Only Edge does currently not allow to create AudioNodes (and other objects) on a closed context yet.\n        const backupNativeContext = getBackupNativeContext(nativeContext);\n        // @todo Edge, Firefox & Safari do only accept Float32Arrays.\n        const wrappedImag = new Float32Array(imag);\n        const wrappedReal = new Float32Array(real);\n        if (backupNativeContext !== null) {\n            return backupNativeContext.createPeriodicWave(wrappedReal, wrappedImag, { disableNormalization });\n        }\n        return nativeContext.createPeriodicWave(wrappedReal, wrappedImag, { disableNormalization });\n    };\n};\n//# sourceMappingURL=native-periodic-wave-factory.js.map"]},"metadata":{},"sourceType":"module"}