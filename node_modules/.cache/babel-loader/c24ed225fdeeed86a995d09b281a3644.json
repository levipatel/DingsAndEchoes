{"ast":null,"code":"import _regeneratorRuntime from \"/Users/levipatel/Github/DingsAndEchoes/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/levipatel/Github/DingsAndEchoes/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\n/**\n * Chrome version 66 and 67 did not call the process() function of an AudioWorkletProcessor if it had no outputs. AudioWorklet support was\n * enabled by default in version 66.\n */\nexport var createTestAudioWorkletProcessorNoOutputsSupport = function createTestAudioWorkletProcessorNoOutputsSupport(nativeAudioWorkletNodeConstructor, nativeOfflineAudioContextConstructor) {\n  return /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n    var blob, offlineAudioContext, url, isCallingProcess, gainNode, audioWorkletNode;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (!(nativeAudioWorkletNodeConstructor === null)) {\n              _context.next = 2;\n              break;\n            }\n\n            return _context.abrupt(\"return\", true);\n\n          case 2:\n            if (!(nativeOfflineAudioContextConstructor === null)) {\n              _context.next = 4;\n              break;\n            }\n\n            return _context.abrupt(\"return\", false);\n\n          case 4:\n            blob = new Blob(['class A extends AudioWorkletProcessor{process(){this.port.postMessage(0)}}registerProcessor(\"a\",A)'], {\n              type: 'application/javascript; charset=utf-8'\n            });\n            offlineAudioContext = new nativeOfflineAudioContextConstructor(1, 128, 3200);\n            url = URL.createObjectURL(blob);\n            isCallingProcess = false;\n            _context.prev = 8;\n            _context.next = 11;\n            return offlineAudioContext.audioWorklet.addModule(url);\n\n          case 11:\n            gainNode = offlineAudioContext.createGain();\n            audioWorkletNode = new nativeAudioWorkletNodeConstructor(offlineAudioContext, 'a', {\n              numberOfOutputs: 0\n            });\n\n            audioWorkletNode.port.onmessage = function () {\n              return isCallingProcess = true;\n            };\n\n            gainNode.connect(audioWorkletNode);\n            _context.next = 17;\n            return offlineAudioContext.startRendering();\n\n          case 17:\n            _context.next = 21;\n            break;\n\n          case 19:\n            _context.prev = 19;\n            _context.t0 = _context[\"catch\"](8);\n\n          case 21:\n            _context.prev = 21;\n            URL.revokeObjectURL(url);\n            return _context.finish(21);\n\n          case 24:\n            return _context.abrupt(\"return\", isCallingProcess);\n\n          case 25:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[8, 19, 21, 24]]);\n  }));\n};","map":{"version":3,"sources":["../../../src/factories/test-audio-worklet-processor-no-outputs-support.ts"],"names":[],"mappings":";;;AAEA;;;;AAIA,OAAO,IAAM,+CAA+C,GAAsD,SAArG,+CAAqG,CAC9G,iCAD8G,EAE9G,oCAF8G,EAG9G;AACA,+EAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEC,iCAAiC,KAAK,IAFvC;AAAA;AAAA;AAAA;;AAAA,6CAGQ,IAHR;;AAAA;AAAA,kBAMC,oCAAoC,KAAK,IAN1C;AAAA;AAAA;AAAA;;AAAA,6CAOQ,KAPR;;AAAA;AAUG,YAAA,IAVH,GAUU,IAAI,IAAJ,CAAS,CAAC,oGAAD,CAAT,EAAiH;AAC1H,cAAA,IAAI,EAAE;AADoH,aAAjH,CAVV;AAaG,YAAA,mBAbH,GAayB,IAAI,oCAAJ,CAAyC,CAAzC,EAA4C,GAA5C,EAAiD,IAAjD,CAbzB;AAcG,YAAA,GAdH,GAcS,GAAG,CAAC,eAAJ,CAAoB,IAApB,CAdT;AAgBC,YAAA,gBAhBD,GAgBoB,KAhBpB;AAAA;AAAA;AAAA,mBAmBO,mBAAmB,CAAC,YAApB,CAAiC,SAAjC,CAA2C,GAA3C,CAnBP;;AAAA;AAoBO,YAAA,QApBP,GAoBkB,mBAAmB,CAAC,UAApB,EApBlB;AAqBO,YAAA,gBArBP,GAqB0B,IAAI,iCAAJ,CAAsC,mBAAtC,EAA2D,GAA3D,EAAgE;AAAE,cAAA,eAAe,EAAE;AAAnB,aAAhE,CArB1B;;AAuBC,YAAA,gBAAgB,CAAC,IAAjB,CAAsB,SAAtB,GAAkC;AAAA,qBAAO,gBAAgB,GAAG,IAA1B;AAAA,aAAlC;;AAEA,YAAA,QAAQ,CAAC,OAAT,CAAiB,gBAAjB;AAzBD;AAAA,mBA2BO,mBAAmB,CAAC,cAApB,EA3BP;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AA+BC,YAAA,GAAG,CAAC,eAAJ,CAAoB,GAApB;AA/BD;;AAAA;AAAA,6CAkCI,gBAlCJ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAP;AAoCH,CAxCM","sourceRoot":"","sourcesContent":["/**\n * Chrome version 66 and 67 did not call the process() function of an AudioWorkletProcessor if it had no outputs. AudioWorklet support was\n * enabled by default in version 66.\n */\nexport const createTestAudioWorkletProcessorNoOutputsSupport = (nativeAudioWorkletNodeConstructor, nativeOfflineAudioContextConstructor) => {\n    return async () => {\n        // Bug #61: If there is no native AudioWorkletNode it gets faked and therefore it is no problem if the it doesn't exist.\n        if (nativeAudioWorkletNodeConstructor === null) {\n            return true;\n        }\n        if (nativeOfflineAudioContextConstructor === null) {\n            return false;\n        }\n        const blob = new Blob(['class A extends AudioWorkletProcessor{process(){this.port.postMessage(0)}}registerProcessor(\"a\",A)'], {\n            type: 'application/javascript; charset=utf-8'\n        });\n        const offlineAudioContext = new nativeOfflineAudioContextConstructor(1, 128, 3200);\n        const url = URL.createObjectURL(blob);\n        let isCallingProcess = false;\n        try {\n            await offlineAudioContext.audioWorklet.addModule(url);\n            const gainNode = offlineAudioContext.createGain();\n            const audioWorkletNode = new nativeAudioWorkletNodeConstructor(offlineAudioContext, 'a', { numberOfOutputs: 0 });\n            audioWorkletNode.port.onmessage = () => (isCallingProcess = true);\n            gainNode.connect(audioWorkletNode);\n            await offlineAudioContext.startRendering();\n        }\n        catch {\n            // Ignore errors.\n        }\n        finally {\n            URL.revokeObjectURL(url);\n        }\n        return isCallingProcess;\n    };\n};\n//# sourceMappingURL=test-audio-worklet-processor-no-outputs-support.js.map"]},"metadata":{},"sourceType":"module"}