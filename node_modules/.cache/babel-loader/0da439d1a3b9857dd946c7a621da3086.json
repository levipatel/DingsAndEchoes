{"ast":null,"code":"import { setInternalStateToActive } from '../helpers/set-internal-state-to-active';\nimport { setInternalStateToPassive } from '../helpers/set-internal-state-to-passive';\nconst DEFAULT_OPTIONS = {\n  channelCount: 2,\n  channelCountMode: 'max',\n  channelInterpretation: 'speakers',\n  detune: 0,\n  frequency: 440,\n  type: 'sine'\n};\nexport const createOscillatorNodeConstructor = (audioNodeConstructor, createAudioParam, createInvalidStateError, createNativeOscillatorNode, createOscillatorNodeRenderer, getNativeContext, isNativeOfflineAudioContext, wrapEventListener) => {\n  return class OscillatorNode extends audioNodeConstructor {\n    constructor(context, options = DEFAULT_OPTIONS) {\n      const nativeContext = getNativeContext(context);\n      const mergedOptions = { ...DEFAULT_OPTIONS,\n        ...options\n      };\n      const nativeOscillatorNode = createNativeOscillatorNode(nativeContext, mergedOptions);\n      const isOffline = isNativeOfflineAudioContext(nativeContext);\n      const oscillatorNodeRenderer = isOffline ? createOscillatorNodeRenderer() : null;\n      const nyquist = context.sampleRate / 2;\n      super(context, false, nativeOscillatorNode, oscillatorNodeRenderer); // Bug #81: Edge, Firefox & Safari do not export the correct values for maxValue and minValue.\n\n      this._detune = createAudioParam(this, isOffline, nativeOscillatorNode.detune, 153600, -153600); // Bug #76: Edge & Safari do not export the correct values for maxValue and minValue.\n\n      this._frequency = createAudioParam(this, isOffline, nativeOscillatorNode.frequency, nyquist, -nyquist);\n      this._nativeOscillatorNode = nativeOscillatorNode;\n      this._onended = null;\n      this._oscillatorNodeRenderer = oscillatorNodeRenderer;\n\n      if (this._oscillatorNodeRenderer !== null && mergedOptions.periodicWave !== undefined) {\n        this._oscillatorNodeRenderer.periodicWave = mergedOptions.periodicWave;\n      }\n    }\n\n    get detune() {\n      return this._detune;\n    }\n\n    get frequency() {\n      return this._frequency;\n    }\n\n    get onended() {\n      return this._onended;\n    }\n\n    set onended(value) {\n      const wrappedListener = typeof value === 'function' ? wrapEventListener(this, value) : null;\n      this._nativeOscillatorNode.onended = wrappedListener;\n      const nativeOnEnded = this._nativeOscillatorNode.onended;\n      this._onended = nativeOnEnded !== null && nativeOnEnded === wrappedListener ? value : nativeOnEnded;\n    }\n\n    get type() {\n      return this._nativeOscillatorNode.type;\n    }\n\n    set type(value) {\n      this._nativeOscillatorNode.type = value; // Bug #57: Edge will not throw an error when assigning the type to 'custom'. But it still will change the value.\n\n      if (value === 'custom') {\n        throw createInvalidStateError();\n      }\n\n      if (this._oscillatorNodeRenderer !== null) {\n        this._oscillatorNodeRenderer.periodicWave = null;\n      }\n    }\n\n    setPeriodicWave(periodicWave) {\n      this._nativeOscillatorNode.setPeriodicWave(periodicWave);\n\n      if (this._oscillatorNodeRenderer !== null) {\n        this._oscillatorNodeRenderer.periodicWave = periodicWave;\n      }\n    }\n\n    start(when = 0) {\n      this._nativeOscillatorNode.start(when);\n\n      if (this._oscillatorNodeRenderer !== null) {\n        this._oscillatorNodeRenderer.start = when;\n      } else {\n        setInternalStateToActive(this);\n\n        const resetInternalStateToPassive = () => {\n          this._nativeOscillatorNode.removeEventListener('ended', resetInternalStateToPassive); // @todo Determine a meaningful delay instead of just using one second.\n\n\n          setTimeout(() => setInternalStateToPassive(this), 1000);\n        };\n\n        this._nativeOscillatorNode.addEventListener('ended', resetInternalStateToPassive);\n      }\n    }\n\n    stop(when = 0) {\n      this._nativeOscillatorNode.stop(when);\n\n      if (this._oscillatorNodeRenderer !== null) {\n        this._oscillatorNodeRenderer.stop = when;\n      }\n    }\n\n  };\n};","map":{"version":3,"sources":["../../../src/factories/oscillator-node-constructor.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import { setInternalStateToActive } from '../helpers/set-internal-state-to-active';\nimport { setInternalStateToPassive } from '../helpers/set-internal-state-to-passive';\nconst DEFAULT_OPTIONS = {\n    channelCount: 2,\n    channelCountMode: 'max',\n    channelInterpretation: 'speakers',\n    detune: 0,\n    frequency: 440,\n    type: 'sine'\n};\nexport const createOscillatorNodeConstructor = (audioNodeConstructor, createAudioParam, createInvalidStateError, createNativeOscillatorNode, createOscillatorNodeRenderer, getNativeContext, isNativeOfflineAudioContext, wrapEventListener) => {\n    return class OscillatorNode extends audioNodeConstructor {\n        constructor(context, options = DEFAULT_OPTIONS) {\n            const nativeContext = getNativeContext(context);\n            const mergedOptions = { ...DEFAULT_OPTIONS, ...options };\n            const nativeOscillatorNode = createNativeOscillatorNode(nativeContext, mergedOptions);\n            const isOffline = isNativeOfflineAudioContext(nativeContext);\n            const oscillatorNodeRenderer = (isOffline ? createOscillatorNodeRenderer() : null);\n            const nyquist = context.sampleRate / 2;\n            super(context, false, nativeOscillatorNode, oscillatorNodeRenderer);\n            // Bug #81: Edge, Firefox & Safari do not export the correct values for maxValue and minValue.\n            this._detune = createAudioParam(this, isOffline, nativeOscillatorNode.detune, 153600, -153600);\n            // Bug #76: Edge & Safari do not export the correct values for maxValue and minValue.\n            this._frequency = createAudioParam(this, isOffline, nativeOscillatorNode.frequency, nyquist, -nyquist);\n            this._nativeOscillatorNode = nativeOscillatorNode;\n            this._onended = null;\n            this._oscillatorNodeRenderer = oscillatorNodeRenderer;\n            if (this._oscillatorNodeRenderer !== null && mergedOptions.periodicWave !== undefined) {\n                this._oscillatorNodeRenderer.periodicWave =\n                    mergedOptions.periodicWave;\n            }\n        }\n        get detune() {\n            return this._detune;\n        }\n        get frequency() {\n            return this._frequency;\n        }\n        get onended() {\n            return this._onended;\n        }\n        set onended(value) {\n            const wrappedListener = typeof value === 'function' ? wrapEventListener(this, value) : null;\n            this._nativeOscillatorNode.onended = wrappedListener;\n            const nativeOnEnded = this._nativeOscillatorNode.onended;\n            this._onended = nativeOnEnded !== null && nativeOnEnded === wrappedListener ? value : nativeOnEnded;\n        }\n        get type() {\n            return this._nativeOscillatorNode.type;\n        }\n        set type(value) {\n            this._nativeOscillatorNode.type = value;\n            // Bug #57: Edge will not throw an error when assigning the type to 'custom'. But it still will change the value.\n            if (value === 'custom') {\n                throw createInvalidStateError();\n            }\n            if (this._oscillatorNodeRenderer !== null) {\n                this._oscillatorNodeRenderer.periodicWave = null;\n            }\n        }\n        setPeriodicWave(periodicWave) {\n            this._nativeOscillatorNode.setPeriodicWave(periodicWave);\n            if (this._oscillatorNodeRenderer !== null) {\n                this._oscillatorNodeRenderer.periodicWave = periodicWave;\n            }\n        }\n        start(when = 0) {\n            this._nativeOscillatorNode.start(when);\n            if (this._oscillatorNodeRenderer !== null) {\n                this._oscillatorNodeRenderer.start = when;\n            }\n            else {\n                setInternalStateToActive(this);\n                const resetInternalStateToPassive = () => {\n                    this._nativeOscillatorNode.removeEventListener('ended', resetInternalStateToPassive);\n                    // @todo Determine a meaningful delay instead of just using one second.\n                    setTimeout(() => setInternalStateToPassive(this), 1000);\n                };\n                this._nativeOscillatorNode.addEventListener('ended', resetInternalStateToPassive);\n            }\n        }\n        stop(when = 0) {\n            this._nativeOscillatorNode.stop(when);\n            if (this._oscillatorNodeRenderer !== null) {\n                this._oscillatorNodeRenderer.stop = when;\n            }\n        }\n    };\n};\n//# sourceMappingURL=oscillator-node-constructor.js.map"]},"metadata":{},"sourceType":"module"}