{"ast":null,"code":"import _classCallCheck from \"/Users/levipatel/Github/DingsAndEchoes/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/levipatel/Github/DingsAndEchoes/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/Users/levipatel/Github/DingsAndEchoes/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/Users/levipatel/Github/DingsAndEchoes/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/levipatel/Github/DingsAndEchoes/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport { CONTEXT_STORE } from '../globals';\nexport var createMinimalBaseAudioContextConstructor = function createMinimalBaseAudioContextConstructor(audioDestinationNodeConstructor, createAudioListener, eventTargetConstructor, isNativeOfflineAudioContext, unrenderedAudioWorkletNodeStore, wrapEventListener) {\n  return /*#__PURE__*/function (_eventTargetConstruct) {\n    _inherits(MinimalBaseAudioContext, _eventTargetConstruct);\n\n    var _super = _createSuper(MinimalBaseAudioContext);\n\n    function MinimalBaseAudioContext(_nativeContext, numberOfChannels) {\n      var _this;\n\n      _classCallCheck(this, MinimalBaseAudioContext);\n\n      _this = _super.call(this, _nativeContext);\n      _this._nativeContext = _nativeContext;\n      CONTEXT_STORE.set(_assertThisInitialized(_this), _nativeContext); // Bug #93: Edge will set the sampleRate of an AudioContext to zero when it is closed.\n\n      var sampleRate = _nativeContext.sampleRate;\n      Object.defineProperty(_nativeContext, 'sampleRate', {\n        get: function get() {\n          return sampleRate;\n        }\n      });\n\n      if (isNativeOfflineAudioContext(_nativeContext)) {\n        unrenderedAudioWorkletNodeStore.set(_nativeContext, new Set());\n      }\n\n      _this._destination = new audioDestinationNodeConstructor(_assertThisInitialized(_this), numberOfChannels);\n      _this._listener = createAudioListener(_assertThisInitialized(_this), _nativeContext);\n      _this._onstatechange = null;\n      return _this;\n    }\n\n    _createClass(MinimalBaseAudioContext, [{\n      key: \"currentTime\",\n      get: function get() {\n        return this._nativeContext.currentTime;\n      }\n    }, {\n      key: \"destination\",\n      get: function get() {\n        return this._destination;\n      }\n    }, {\n      key: \"listener\",\n      get: function get() {\n        return this._listener;\n      }\n    }, {\n      key: \"onstatechange\",\n      get: function get() {\n        return this._onstatechange;\n      },\n      set: function set(value) {\n        var wrappedListener = typeof value === 'function' ? wrapEventListener(this, value) : null;\n        this._nativeContext.onstatechange = wrappedListener;\n        var nativeOnStateChange = this._nativeContext.onstatechange;\n        this._onstatechange = nativeOnStateChange !== null && nativeOnStateChange === wrappedListener ? value : nativeOnStateChange;\n      }\n    }, {\n      key: \"sampleRate\",\n      get: function get() {\n        return this._nativeContext.sampleRate;\n      }\n    }, {\n      key: \"state\",\n      get: function get() {\n        return this._nativeContext.state;\n      }\n    }]);\n\n    return MinimalBaseAudioContext;\n  }(eventTargetConstructor);\n};","map":{"version":3,"sources":["../../../src/factories/minimal-base-audio-context-constructor.ts"],"names":[],"mappings":";;;;;AAAA,SAAS,aAAT,QAA8B,YAA9B;AAIA,OAAO,IAAM,wCAAwC,GAA+C,SAAvF,wCAAuF,CAChG,+BADgG,EAEhG,mBAFgG,EAGhG,sBAHgG,EAIhG,2BAJgG,EAKhG,+BALgG,EAMhG,iBANgG,EAOhG;AACA;AAAA;;AAAA;;AAOI,qCAAoB,cAApB,EAAoD,gBAApD,EAA4E;AAAA;;AAAA;;AACxE,gCAAM,cAAN;AADgB,YAAA,cAAA,GAAA,cAAA;AAGhB,MAAA,aAAa,CAAC,GAAd,gCAAsC,cAAtC,EAHwE,CAKxE;;AACA,UAAM,UAAU,GAAG,cAAc,CAAC,UAAlC;AAEA,MAAA,MAAM,CAAC,cAAP,CAAsB,cAAtB,EAAsC,YAAtC,EAAoD;AAChD,QAAA,GAAG,EAAE;AAAA,iBAAM,UAAN;AAAA;AAD2C,OAApD;;AAIA,UAAI,2BAA2B,CAAC,cAAD,CAA/B,EAAiD;AAC7C,QAAA,+BAA+B,CAAC,GAAhC,CAAoC,cAApC,EAAoD,IAAI,GAAJ,EAApD;AACH;;AAED,YAAK,YAAL,GAAoB,IAAI,+BAAJ,gCAAwD,gBAAxD,CAApB;AACA,YAAK,SAAL,GAAiB,mBAAmB,gCAAqB,cAArB,CAApC;AACA,YAAK,cAAL,GAAsB,IAAtB;AAlBwE;AAmB3E;;AA1BL;AAAA;AAAA,0BA4BmB;AACX,eAAO,KAAK,cAAL,CAAoB,WAA3B;AACH;AA9BL;AAAA;AAAA,0BAgCmB;AACX,eAAO,KAAK,YAAZ;AACH;AAlCL;AAAA;AAAA,0BAoCgB;AACR,eAAO,KAAK,SAAZ;AACH;AAtCL;AAAA;AAAA,0BAwCqB;AACb,eAAO,KAAK,cAAZ;AACH,OA1CL;AAAA,wBA4CsB,KA5CtB,EA4C2B;AACnB,YAAM,eAAe,GAAG,OAAO,KAAP,KAAiB,UAAjB,GAA8B,iBAAiB,CAAC,IAAD,EAAO,KAAP,CAA/C,GAA+D,IAAvF;AAEA,aAAK,cAAL,CAAoB,aAApB,GAAoC,eAApC;AAEA,YAAM,mBAAmB,GAAG,KAAK,cAAL,CAAoB,aAAhD;AAEA,aAAK,cAAL,GACI,mBAAmB,KAAK,IAAxB,IAAgC,mBAAmB,KAAK,eAAxD,GACM,KADN,GAE+B,mBAHnC;AAIH;AAvDL;AAAA;AAAA,0BAyDkB;AACV,eAAO,KAAK,cAAL,CAAoB,UAA3B;AACH;AA3DL;AAAA;AAAA,0BA6Da;AACL,eAAO,KAAK,cAAL,CAAoB,KAA3B;AACH;AA/DL;;AAAA;AAAA,IAAiE,sBAAjE;AAiEH,CAzEM","sourceRoot":"","sourcesContent":["import { CONTEXT_STORE } from '../globals';\nexport const createMinimalBaseAudioContextConstructor = (audioDestinationNodeConstructor, createAudioListener, eventTargetConstructor, isNativeOfflineAudioContext, unrenderedAudioWorkletNodeStore, wrapEventListener) => {\n    return class MinimalBaseAudioContext extends eventTargetConstructor {\n        constructor(_nativeContext, numberOfChannels) {\n            super(_nativeContext);\n            this._nativeContext = _nativeContext;\n            CONTEXT_STORE.set(this, _nativeContext);\n            // Bug #93: Edge will set the sampleRate of an AudioContext to zero when it is closed.\n            const sampleRate = _nativeContext.sampleRate;\n            Object.defineProperty(_nativeContext, 'sampleRate', {\n                get: () => sampleRate\n            });\n            if (isNativeOfflineAudioContext(_nativeContext)) {\n                unrenderedAudioWorkletNodeStore.set(_nativeContext, new Set());\n            }\n            this._destination = new audioDestinationNodeConstructor(this, numberOfChannels);\n            this._listener = createAudioListener(this, _nativeContext);\n            this._onstatechange = null;\n        }\n        get currentTime() {\n            return this._nativeContext.currentTime;\n        }\n        get destination() {\n            return this._destination;\n        }\n        get listener() {\n            return this._listener;\n        }\n        get onstatechange() {\n            return this._onstatechange;\n        }\n        set onstatechange(value) {\n            const wrappedListener = typeof value === 'function' ? wrapEventListener(this, value) : null;\n            this._nativeContext.onstatechange = wrappedListener;\n            const nativeOnStateChange = this._nativeContext.onstatechange;\n            this._onstatechange =\n                nativeOnStateChange !== null && nativeOnStateChange === wrappedListener\n                    ? value\n                    : nativeOnStateChange;\n        }\n        get sampleRate() {\n            return this._nativeContext.sampleRate;\n        }\n        get state() {\n            return this._nativeContext.state;\n        }\n    };\n};\n//# sourceMappingURL=minimal-base-audio-context-constructor.js.map"]},"metadata":{},"sourceType":"module"}