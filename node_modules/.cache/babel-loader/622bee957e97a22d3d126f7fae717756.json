{"ast":null,"code":"import _objectSpread from \"/Users/levipatel/Github/DingsAndEchoes/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _classCallCheck from \"/Users/levipatel/Github/DingsAndEchoes/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/levipatel/Github/DingsAndEchoes/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nvar DEFAULT_OPTIONS = {\n  disableNormalization: false\n};\nexport var createPeriodicWaveConstructor = function createPeriodicWaveConstructor(createNativePeriodicWave, getNativeContext, periodicWaveStore) {\n  return /*#__PURE__*/function () {\n    function PeriodicWave(context, options) {\n      _classCallCheck(this, PeriodicWave);\n\n      var nativeContext = getNativeContext(context);\n\n      var mergedOptions = _objectSpread(_objectSpread({}, DEFAULT_OPTIONS), options);\n\n      var periodicWave = createNativePeriodicWave(nativeContext, mergedOptions);\n      periodicWaveStore.add(periodicWave); // This does violate all good pratices but it is used here to simplify the handling of periodic waves.\n\n      return periodicWave;\n    }\n\n    _createClass(PeriodicWave, null, [{\n      key: Symbol.hasInstance,\n      value: function value(instance) {\n        return instance !== null && typeof instance === 'object' && Object.getPrototypeOf(instance) === PeriodicWave.prototype || periodicWaveStore.has(instance);\n      }\n    }]);\n\n    return PeriodicWave;\n  }();\n};","map":{"version":3,"sources":["../../../src/factories/periodic-wave-constructor.ts"],"names":[],"mappings":";;;AAGA,IAAM,eAAe,GAAG;AACpB,EAAA,oBAAoB,EAAE;AADF,CAAxB;AAIA,OAAO,IAAM,6BAA6B,GAAoC,SAAjE,6BAAiE,CAC1E,wBAD0E,EAE1E,gBAF0E,EAG1E,iBAH0E,EAI1E;AACA;AACI,0BACI,OADJ,EAEI,OAFJ,EAEuH;AAAA;;AAEnH,UAAM,aAAa,GAAG,gBAAgB,CAAC,OAAD,CAAtC;;AACA,UAAM,aAAa,mCAAQ,eAAR,GAA4B,OAA5B,CAAnB;;AAEA,UAAM,YAAY,GAAG,wBAAwB,CAAC,aAAD,EAAgB,aAAhB,CAA7C;AAEA,MAAA,iBAAiB,CAAC,GAAlB,CAAsB,YAAtB,EAPmH,CASnH;;AACA,aAAO,YAAP;AACH;;AAdL;AAAA,WAgBmB,MAAM,CAAC,WAhB1B;AAAA,4BAgBuC,QAhBvC,EAgBwD;AAChD,eACK,QAAQ,KAAK,IAAb,IAAqB,OAAO,QAAP,KAAoB,QAAzC,IAAqD,MAAM,CAAC,cAAP,CAAsB,QAAtB,MAAoC,YAAY,CAAC,SAAvG,IACA,iBAAiB,CAAC,GAAlB,CAA2B,QAA3B,CAFJ;AAIH;AArBL;;AAAA;AAAA;AAuBH,CA5BM","sourceRoot":"","sourcesContent":["const DEFAULT_OPTIONS = {\n    disableNormalization: false\n};\nexport const createPeriodicWaveConstructor = (createNativePeriodicWave, getNativeContext, periodicWaveStore) => {\n    return class PeriodicWave {\n        constructor(context, options) {\n            const nativeContext = getNativeContext(context);\n            const mergedOptions = { ...DEFAULT_OPTIONS, ...options };\n            const periodicWave = createNativePeriodicWave(nativeContext, mergedOptions);\n            periodicWaveStore.add(periodicWave);\n            // This does violate all good pratices but it is used here to simplify the handling of periodic waves.\n            return periodicWave;\n        }\n        static [Symbol.hasInstance](instance) {\n            return ((instance !== null && typeof instance === 'object' && Object.getPrototypeOf(instance) === PeriodicWave.prototype) ||\n                periodicWaveStore.has(instance));\n        }\n    };\n};\n//# sourceMappingURL=periodic-wave-constructor.js.map"]},"metadata":{},"sourceType":"module"}