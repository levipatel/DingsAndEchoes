{"ast":null,"code":"import { assignNativeAudioNodeAudioParamValue } from '../helpers/assign-native-audio-node-audio-param-value';\nimport { assignNativeAudioNodeOption } from '../helpers/assign-native-audio-node-option';\nimport { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nexport const createNativeBiquadFilterNodeFactory = createNativeAudioNode => {\n  return (nativeContext, options) => {\n    const nativeBiquadFilterNode = createNativeAudioNode(nativeContext, ntvCntxt => ntvCntxt.createBiquadFilter());\n    assignNativeAudioNodeOptions(nativeBiquadFilterNode, options);\n    assignNativeAudioNodeAudioParamValue(nativeBiquadFilterNode, options, 'Q');\n    assignNativeAudioNodeAudioParamValue(nativeBiquadFilterNode, options, 'detune');\n    assignNativeAudioNodeAudioParamValue(nativeBiquadFilterNode, options, 'frequency');\n    assignNativeAudioNodeAudioParamValue(nativeBiquadFilterNode, options, 'gain');\n    assignNativeAudioNodeOption(nativeBiquadFilterNode, options, 'type');\n    return nativeBiquadFilterNode;\n  };\n};","map":{"version":3,"sources":["../../../src/factories/native-biquad-filter-node-factory.ts"],"names":[],"mappings":"AAAA,SAAS,oCAAT,QAAqD,uDAArD;AACA,SAAS,2BAAT,QAA4C,4CAA5C;AACA,SAAS,4BAAT,QAA6C,6CAA7C;AAGA,OAAO,MAAM,mCAAmC,GAA2C,qBAAD,IAA0B;AAChH,SAAO,CAAC,aAAD,EAAgB,OAAhB,KAA2B;AAC9B,UAAM,sBAAsB,GAAG,qBAAqB,CAAC,aAAD,EAAiB,QAAD,IAAc,QAAQ,CAAC,kBAAT,EAA9B,CAApD;AAEA,IAAA,4BAA4B,CAAC,sBAAD,EAAyB,OAAzB,CAA5B;AAEA,IAAA,oCAAoC,CAAC,sBAAD,EAAyB,OAAzB,EAAkC,GAAlC,CAApC;AACA,IAAA,oCAAoC,CAAC,sBAAD,EAAyB,OAAzB,EAAkC,QAAlC,CAApC;AACA,IAAA,oCAAoC,CAAC,sBAAD,EAAyB,OAAzB,EAAkC,WAAlC,CAApC;AACA,IAAA,oCAAoC,CAAC,sBAAD,EAAyB,OAAzB,EAAkC,MAAlC,CAApC;AAEA,IAAA,2BAA2B,CAAC,sBAAD,EAAyB,OAAzB,EAAkC,MAAlC,CAA3B;AAEA,WAAO,sBAAP;AACH,GAbD;AAcH,CAfM","sourceRoot":"","sourcesContent":["import { assignNativeAudioNodeAudioParamValue } from '../helpers/assign-native-audio-node-audio-param-value';\nimport { assignNativeAudioNodeOption } from '../helpers/assign-native-audio-node-option';\nimport { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nexport const createNativeBiquadFilterNodeFactory = (createNativeAudioNode) => {\n    return (nativeContext, options) => {\n        const nativeBiquadFilterNode = createNativeAudioNode(nativeContext, (ntvCntxt) => ntvCntxt.createBiquadFilter());\n        assignNativeAudioNodeOptions(nativeBiquadFilterNode, options);\n        assignNativeAudioNodeAudioParamValue(nativeBiquadFilterNode, options, 'Q');\n        assignNativeAudioNodeAudioParamValue(nativeBiquadFilterNode, options, 'detune');\n        assignNativeAudioNodeAudioParamValue(nativeBiquadFilterNode, options, 'frequency');\n        assignNativeAudioNodeAudioParamValue(nativeBiquadFilterNode, options, 'gain');\n        assignNativeAudioNodeOption(nativeBiquadFilterNode, options, 'type');\n        return nativeBiquadFilterNode;\n    };\n};\n//# sourceMappingURL=native-biquad-filter-node-factory.js.map"]},"metadata":{},"sourceType":"module"}